{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["Todo","_ref","todo","checkboxChange","deleteTodo","togleAll","fixInput","react_default","a","createElement","className","completed","key","id","type","checked","concat","onChange","regenerator_default","async","_context","prev","next","awrap","stop","onDoubleClick","title","onClick","_context2","TodoList","todos","map","item","components_Todo","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onInputChange","event","setState","target","value","createTodo","state","preventDefault","newitem","Date","now","addTodo","_this2","onSubmit","placeholder","React","Component","Footer","FILTER_TYPES","filter","filterHandler","removeCompleted","style","display","length","values","href","find","all","active","App","isChecked","prevState","objectSpread2","toConsumableArray","togleCompleted","some","paramtr","todosFilter","components_Header","htmlFor","components_TodoList","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8428895d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ todo, checkboxChange, deleteTodo, togleAll, fixInput }) => (\n  <li className={todo.completed ? 'completed' : ''} key={todo.id}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        checked={todo.completed}\n        id={`todo-${todo.id}`}\n        onChange={async() => {\n          await checkboxChange(todo.id);\n          togleAll();\n        }}\n      />\n      <label onDoubleClick={fixInput}>\n        {todo.title}\n      </label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={async() => {\n          await deleteTodo(todo.id);\n          togleAll();\n        }}\n      />\n    </div>\n    <input\n      type=\"text\"\n      className=\"edit\"\n    />\n  </li>\n);\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    value: PropTypes.string,\n  }).isRequired,\n  checkboxChange: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  togleAll: PropTypes.func.isRequired,\n  fixInput: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = (\n  { todos, checkboxChange, deleteTodo, togleAll, fixInput }\n) => (\n  todos.map(item => (\n    <Todo\n      todo={item}\n      checkboxChange={checkboxChange}\n      deleteTodo={deleteTodo}\n      key={item.id}\n      togleAll={togleAll}\n      fixInput={fixInput}\n    />\n  ))\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n    };\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  createTodo = (event) => {\n    const { title } = this.state;\n\n    event.preventDefault();\n    const newitem = {\n      id: Date.now(),\n      title,\n      completed: false,\n    };\n\n    if (title) {\n      this.props.addTodo(newitem);\n      this.setState({\n        title: '',\n      });\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={async(event) => {\n          await this.createTodo(event);\n          this.props.togleAll();\n        }}\n        >\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.onInputChange}\n            value={this.state.title}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  togleAll: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = (\n  { todos, FILTER_TYPES, filter, filterHandler, removeCompleted }\n) => (\n\n  <footer\n    className=\"footer\"\n    style={{ display: todos.length ? '' : 'none' }}\n  >\n    <span className=\"todo-count\">\n      {`\n        ${todos.filter(todo => !todo.completed).length}\n        items left`\n      }\n    </span>\n\n    <ul className=\"filters\">\n      {Object.values(FILTER_TYPES).map(item => (\n        <li>\n          <a\n            href=\"#/\"\n            className={filter === item ? 'selected' : ''}\n            onClick={() => filterHandler(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={removeCompleted}\n    >\n      {todos.find(todo => todo.completed)\n        ? 'Clear completed' : ''}\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf.isRequired,\n  FILTER_TYPES: PropTypes.objectOf.isRequired,\n  filter: PropTypes.string.isRequired,\n  filterHandler: PropTypes.func.isRequired,\n  removeCompleted: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst FILTER_TYPES = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed',\n};\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filter: 'All',\n    isChecked: false,\n  }\n\n  checkboxChange = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (id === todo.id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n            isChecked: false,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  }\n\n  addTodo = (newitem) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, newitem],\n    }));\n  };\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => id !== todo.id),\n    }));\n  }\n\n  togleCompleted = () => {\n    if (this.state.todos.some(todo => !todo.completed)) {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n        isChecked: true,\n      }));\n    } else {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          completed: false,\n        })),\n        isChecked: false,\n      }));\n    }\n  }\n\n  togleAll = () => {\n    if (!this.state.todos.some(todo => !todo.completed)) {\n      this.setState({\n        isChecked: true,\n      });\n    } else {\n      this.setState({\n        isChecked: false,\n      });\n    }\n  }\n\n  filterHandler = (paramtr) => {\n    this.setState({\n      filter: paramtr,\n    });\n  }\n\n  todosFilter = (item) => {\n    if (this.state.filter === FILTER_TYPES.active) {\n      return !item.completed;\n    }\n\n    if (this.state.filter === FILTER_TYPES.completed) {\n      return item.completed;\n    }\n\n    return item;\n  }\n\n  removeCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header\n          addTodo={this.addTodo}\n          togleAll={this.togleAll}\n        />\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={this.state.isChecked}\n            onClick={this.togleCompleted}\n          />\n          <label\n            htmlFor=\"toggle-all\"\n            style={{ display: this.state.todos.length ? '' : 'none' }}\n          >\n            Mark all as complete\n          </label>\n          <ul className=\"todo-list\">\n            <TodoList\n              todos={this.state.todos.filter(this.todosFilter)}\n              checkboxChange={this.checkboxChange}\n              deleteTodo={this.deleteTodo}\n              togleAll={this.togleAll}\n              fixInput={this.fixInput}\n            />\n          </ul>\n        </section>\n        <Footer\n          todos={this.state.todos}\n          FILTER_TYPES={FILTER_TYPES}\n          filter={this.state.filter}\n          filterHandler={this.filterHandler}\n          removeCompleted={this.removeCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}