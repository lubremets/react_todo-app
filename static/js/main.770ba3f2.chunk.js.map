{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Todo","_ref","todo","checkboxChange","deleteTodo","fixInput","react_default","a","createElement","className","completed","key","id","type","checked","concat","onChange","htmlFor","onDoubleClick","title","onClick","TodoList","todos","map","item","components_Todo","App","state","counter","itemsLeft","onInputChange","event","_this","setState","target","value","addTodo","newitem","prevState","Object","toConsumableArray","objectSpread2","filter","placeholder","this","onKeyDown","components_TodoList","href","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.770ba3f2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ todo, checkboxChange, deleteTodo, fixInput }) => (\n  <li className={todo.completed ? 'completed' : ''} key={todo.id}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        checked={todo.completed}\n        id={`todo-${todo.id}`}\n        onChange={() => checkboxChange(todo.id)}\n      />\n      <label htmlFor={`todo-${todo.id}`} onDoubleClick={fixInput}>\n        {todo.title}\n      </label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => deleteTodo(todo.id)}\n      />\n    </div>\n    <input\n      type=\"text\"\n      className=\"edit\"\n    />\n  </li>\n);\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    value: PropTypes.string,\n  }).isRequired,\n  checkboxChange: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  fixInput: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, checkboxChange, deleteTodo }) => (\n  todos.map(item => (\n    <Todo\n      todo={item}\n      checkboxChange={checkboxChange}\n      deleteTodo={deleteTodo}\n      key={item.id}\n    />\n  ))\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport TodoList from './components/TodoList';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    title: '',\n    counter: 4,\n    itemsLeft: 0,\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  addTodo = (event) => {\n    const newitem = {\n      id: this.state.counter,\n      title: this.state.title,\n      completed: false,\n    };\n\n    if (event.key === 'Enter') {\n      this.setState(prevState => ({\n        todos: [...prevState.todos, newitem],\n        counter: prevState.counter + 1,\n        title: '',\n      }));\n    }\n  }\n\n  checkboxChange = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (id !== todo.id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => id !== todo.id),\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.onInputChange}\n            onKeyDown={this.addTodo}\n            value={this.state.title}\n          />\n        </header>\n\n        <section className=\"main\">\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n\n            <TodoList\n              todos={this.state.todos}\n              checkboxChange={this.checkboxChange}\n              deleteTodo={this.deleteTodo}\n            />\n\n            <li>\n              <div className=\"view\">\n                <input type=\"checkbox\" className=\"toggle\" id=\"todo-1\" />\n                <label htmlFor=\"todo-1\">asdfghj</label>\n                <button type=\"button\" className=\"destroy\" />\n              </div>\n              <input type=\"text\" className=\"edit\" />\n            </li>\n\n            {/* <li className=\"completed\">\n              <div className=\"view\">\n                <input type=\"checkbox\" checked className=\"toggle\" id=\"todo-2\" />\n                <label htmlFor=\"todo-2\">qwertyuio</label>\n                <button type=\"button\" className=\"destroy\" />\n              </div>\n              <input type=\"text\" className=\"edit\" />\n            </li>\n\n            <li className=\"editing\">\n              <div className=\"view\">\n                <input type=\"checkbox\" className=\"toggle\" id=\"todo-3\" />\n                <label htmlFor=\"todo-3\">zxcvbnm</label>\n                <button type=\"button\" className=\"destroy\" />\n              </div>\n              <input type=\"text\" className=\"edit\" />\n            </li>\n\n            <li>\n              <div className=\"view\">\n                <input type=\"checkbox\" className=\"toggle\" id=\"todo-4\" />\n                <label htmlFor=\"todo-4\">1234567890</label>\n                <button type=\"button\" className=\"destroy\" />\n              </div>\n              <input type=\"text\" className=\"edit\" />\n            </li> */}\n          </ul>\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {this.state.itemsLeft}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\">All</a>\n            </li>\n\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n\n          <button type=\"button\" className=\"clear-completed\">\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}