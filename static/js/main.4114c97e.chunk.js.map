{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["Todo","_ref","todo","checkboxChange","deleteTodo","fixInput","react_default","a","createElement","className","completed","key","id","type","checked","concat","onChange","onDoubleClick","title","onClick","TodoList","todos","map","item","components_Todo","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onInputChange","event","setState","target","value","createTodo","state","preventDefault","newitem","Date","now","addTodo","onSubmit","placeholder","React","Component","Footer","FILTER_TYPES","filter","filterHandler","removeCompleted","style","display","length","values","href","find","all","active","App","prevState","objectSpread2","toConsumableArray","togleCompleted","some","paramtr","todosFilter","components_Header","htmlFor","components_TodoList","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4114c97e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ todo, checkboxChange, deleteTodo, fixInput }) => (\n  <li className={todo.completed ? 'completed' : ''} key={todo.id}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        checked={todo.completed}\n        id={`todo-${todo.id}`}\n        onChange={() => checkboxChange(todo.id)}\n      />\n      <label onDoubleClick={fixInput}>\n        {todo.title}\n      </label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => deleteTodo(todo.id)}\n      />\n    </div>\n    <input\n      type=\"text\"\n      className=\"edit\"\n    />\n  </li>\n);\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    value: PropTypes.string,\n  }).isRequired,\n  checkboxChange: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  fixInput: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, checkboxChange, deleteTodo, fixInput }) => (\n  todos.map(item => (\n    <Todo\n      todo={item}\n      checkboxChange={checkboxChange}\n      deleteTodo={deleteTodo}\n      key={item.id}\n      fixInput={fixInput}\n    />\n  ))\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n    };\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  createTodo = (event) => {\n    const { title } = this.state;\n\n    event.preventDefault();\n    const newitem = {\n      id: Date.now(),\n      title,\n      completed: false,\n    };\n\n    if (title) {\n      this.props.addTodo(newitem);\n      this.setState({\n        title: '',\n      });\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.createTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.onInputChange}\n            value={this.state.title}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = (\n  { todos, FILTER_TYPES, filter, filterHandler, removeCompleted }\n) => (\n\n  <footer\n    className=\"footer\"\n    style={{ display: todos.length ? '' : 'none' }}\n  >\n    <span className=\"todo-count\">\n      {`\n        ${todos.filter(todo => !todo.completed).length}\n        items left`\n      }\n    </span>\n\n    <ul className=\"filters\">\n      {Object.values(FILTER_TYPES).map(item => (\n        <li>\n          <a\n            href=\"#/\"\n            className={filter === item ? 'selected' : ''}\n            onClick={() => filterHandler(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={removeCompleted}\n    >\n      {todos.find(todo => todo.completed)\n        ? 'Clear completed' : ''}\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf.isRequired,\n  FILTER_TYPES: PropTypes.objectOf.isRequired,\n  filter: PropTypes.string.isRequired,\n  filterHandler: PropTypes.func.isRequired,\n  removeCompleted: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst FILTER_TYPES = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed',\n};\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filter: 'All',\n  }\n\n  checkboxChange = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (id !== todo.id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  }\n\n  addTodo = (newitem) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, newitem],\n    }));\n  };\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => id !== todo.id),\n    }));\n  }\n\n  togleCompleted = () => {\n    if (this.state.todos.some(todo => !todo.completed)) {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n      }));\n    } else {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          completed: false,\n        })),\n      }));\n    }\n  }\n\n  filterHandler = (paramtr) => {\n    this.setState({\n      filter: paramtr,\n    });\n  }\n\n  todosFilter = (item) => {\n    if (this.state.filter === FILTER_TYPES.active) {\n      return !item.completed;\n    }\n\n    if (this.state.filter === FILTER_TYPES.completed) {\n      return item.completed;\n    }\n\n    return item;\n  }\n\n  removeCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header\n          addTodo={this.addTodo}\n        />\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.togleCompleted}\n          />\n          <label\n            htmlFor=\"toggle-all\"\n            style={{ display: this.state.todos.length ? '' : 'none' }}\n          >\n            Mark all as complete\n          </label>\n          <ul className=\"todo-list\">\n            <TodoList\n              todos={this.state.todos.filter(this.todosFilter)}\n              checkboxChange={this.checkboxChange}\n              deleteTodo={this.deleteTodo}\n              fixInput={this.fixInput}\n            />\n          </ul>\n        </section>\n        <Footer\n          todos={this.state.todos}\n          FILTER_TYPES={FILTER_TYPES}\n          filter={this.state.filter}\n          filterHandler={this.filterHandler}\n          removeCompleted={this.removeCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}