{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Todo","_ref","todo","react_default","a","createElement","className","completed","type","checked","id","concat","htmlFor","title","onClick","TodoList","todos","map","item","components_Todo","key","App","state","counter","onInputChange","event","_this","setState","target","value","addTodo","newitem","prevState","Object","toConsumableArray","placeholder","onChange","this","onKeyDown","components_TodoList","href","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a8af5917.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ todo }) => (\n  <li className={todo.completed ? 'completed' : ''}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        checked={todo.completed}\n        id={`todo-${todo.id}`}\n      />\n      <label htmlFor={`todo-${todo.id}`}>\n        {todo.title}\n      </label>\n      <button type=\"button\" className=\"destroy\" onClick={() => {}} />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    value: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({ todos }) => (\n  todos.map(item => <Todo todo={item} key={item.id} />)\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport TodoList from './components/TodoList';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    title: '',\n    counter: 4,\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  addTodo = (event) => {\n    const newitem = {\n      id: this.state.counter,\n      title: this.state.title,\n      completed: false,\n    };\n\n    if (event.key === 'Enter') {\n      this.setState(prevState => ({\n        todos: [...prevState.todos, newitem],\n        counter: prevState.counter + 1,\n        title: '',\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.onInputChange}\n            onKeyDown={this.addTodo}\n            value={this.state.title}\n          />\n        </header>\n\n        <section className=\"main\">\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n\n            <TodoList todos={this.state.todos} />\n\n            <li>\n              <div className=\"view\">\n                <input type=\"checkbox\" className=\"toggle\" id=\"todo-1\" />\n                <label htmlFor=\"todo-1\">asdfghj</label>\n                <button type=\"button\" className=\"destroy\" />\n              </div>\n              <input type=\"text\" className=\"edit\" />\n            </li>\n\n            <li className=\"completed\">\n              <div className=\"view\">\n                <input type=\"checkbox\" checked className=\"toggle\" id=\"todo-2\" />\n                <label htmlFor=\"todo-2\">qwertyuio</label>\n                <button type=\"button\" className=\"destroy\" />\n              </div>\n              <input type=\"text\" className=\"edit\" />\n            </li>\n\n            <li className=\"editing\">\n              <div className=\"view\">\n                <input type=\"checkbox\" className=\"toggle\" id=\"todo-3\" />\n                <label htmlFor=\"todo-3\">zxcvbnm</label>\n                <button type=\"button\" className=\"destroy\" />\n              </div>\n              <input type=\"text\" className=\"edit\" />\n            </li>\n\n            <li>\n              <div className=\"view\">\n                <input type=\"checkbox\" className=\"toggle\" id=\"todo-4\" />\n                <label htmlFor=\"todo-4\">1234567890</label>\n                <button type=\"button\" className=\"destroy\" />\n              </div>\n              <input type=\"text\" className=\"edit\" />\n            </li>\n          </ul>\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            3 items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\">All</a>\n            </li>\n\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n\n          <button type=\"button\" className=\"clear-completed\">\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}